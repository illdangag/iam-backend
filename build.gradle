plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'checkstyle' // code convention
    id 'com.gorylenko.gradle-git-properties' version '2.4.1' // git 정보
    id "org.asciidoctor.jvm.convert" version "3.3.2" // spring rest docs의 asciidoc을 지원 하기 위함
}

group = 'com.illdangag'
version = '0.0.1-SNAPSHOT'
ext {
    snippetsDir = file('build/generated-snippets') // restdocs에서 생성 될 파일의 경로
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

configurations {
    asciidoctorExtensions

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

checkstyle {
    ignoreFailures = true
    configFile = file("./checkstyle.xml")
    reportsDir = file("${buildDir}/checkstyle-output")
}

asciidoctor {
    dependsOn test

    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir

    sources {
        include('**/index.adoc', '**/common/*.adoc')
    }

    baseDirFollowsSourceFile()

    copy {
        from "build/docs/asciidoc"
        into "src/main/resources/static/docs"
    }

    doFirst {
        delete file('src/main/resources/static/docs')
    }
}

tasks.named('test') {
    dependsOn checkstyleMain, checkstyleTest

    outputs.dir snippetsDir

    useJUnitPlatform()
}

tasks.named('bootJar') {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
